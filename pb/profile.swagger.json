{
  "swagger": "2.0",
  "info": {
    "title": "pb/profile.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/create": {
      "post": {
        "summary": "Create attempts to create a new profile.",
        "operationId": "Create",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/profileProfileResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profileProfileCreationRequest"
            }
          }
        ],
        "tags": [
          "Profile"
        ]
      }
    },
    "/api/v1/hard_delete": {
      "post": {
        "summary": "HardDelete attempts to delete an existing profile physically.",
        "operationId": "HardDelete",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/profileProfileResponseLight"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profileProfileRequest"
            }
          }
        ],
        "tags": [
          "Profile"
        ]
      }
    },
    "/api/v1/list": {
      "post": {
        "summary": "List returns a list of profiles matching a set of criteria.",
        "operationId": "List",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/profileProfileList"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profileProfileListRequest"
            }
          }
        ],
        "tags": [
          "Profile"
        ]
      }
    },
    "/api/v1/read": {
      "post": {
        "summary": "Read returns information about an existing profile.",
        "operationId": "Read",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/profileProfileInfo"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profileProfileRequest"
            }
          }
        ],
        "tags": [
          "Profile"
        ]
      }
    },
    "/api/v1/services/status": {
      "get": {
        "summary": "ServicesStatus method receives no paramaters and returns all services status message",
        "operationId": "ServicesStatus",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/profileServicesStatusList"
            }
          }
        },
        "tags": [
          "Profile"
        ]
      }
    },
    "/api/v1/soft_delete": {
      "post": {
        "summary": "SoftDelete attempts to delete an existing profile logically.",
        "operationId": "SoftDelete",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/profileProfileResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profileProfileRequest"
            }
          }
        ],
        "tags": [
          "Profile"
        ]
      }
    },
    "/api/v1/update": {
      "post": {
        "summary": "Update attempts to update an existing profile.",
        "operationId": "Update",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/profileProfileResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profileProfileInfo"
            }
          }
        ],
        "tags": [
          "Profile"
        ]
      }
    },
    "/api/v1/version": {
      "get": {
        "summary": "Version method receives no paramaters and returns a version message.",
        "operationId": "Version",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/profileVersionResponse"
            }
          }
        },
        "tags": [
          "Profile"
        ]
      }
    }
  },
  "definitions": {
    "ServiceStatusStatus": {
      "type": "string",
      "enum": [
        "OK",
        "UNAVAILABLE"
      ],
      "default": "OK"
    },
    "profileGenders": {
      "type": "string",
      "enum": [
        "UNKNOW",
        "MALE",
        "FEMALE"
      ],
      "default": "UNKNOW"
    },
    "profileProfileCreationRequest": {
      "type": "object",
      "properties": {
        "gender": {
          "$ref": "#/definitions/profileGenders"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "birthday": {
          "type": "string"
        }
      },
      "description": "ProfileCreationRequest encodes a profile creation request."
    },
    "profileProfileInfo": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "gender": {
          "$ref": "#/definitions/profileGenders"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "birthday": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "string"
        }
      },
      "description": "ProfileInfo encodes information about a profile."
    },
    "profileProfileList": {
      "type": "object",
      "properties": {
        "result_set_size": {
          "type": "integer",
          "format": "int64"
        },
        "has_more": {
          "type": "boolean",
          "format": "boolean"
        },
        "profiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/profileProfileInfo"
          }
        }
      },
      "description": "ProfileList encodes the result of a ProfileListRequest."
    },
    "profileProfileListRequest": {
      "type": "object",
      "properties": {
        "page_number": {
          "type": "integer",
          "format": "int64"
        },
        "page_size": {
          "type": "integer",
          "format": "int64"
        },
        "order": {
          "type": "string"
        },
        "exclude_soft_deleted": {
          "type": "boolean",
          "format": "boolean"
        },
        "soft_deleted_only": {
          "type": "boolean",
          "format": "boolean"
        },
        "gender": {
          "$ref": "#/definitions/profileGenders"
        }
      },
      "description": "ProfileListRequest encodes a set of criteria for the retrieval of a list of profiles."
    },
    "profileProfileRequest": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      },
      "description": "ProfileRequest encodes a profile identifier."
    },
    "profileProfileResponse": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean"
        },
        "info": {
          "$ref": "#/definitions/profileProfileInfo"
        }
      },
      "description": "ProfileResponse encodes the result of a profile operation."
    },
    "profileProfileResponseLight": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "description": "ProfileResponseLight encodes the result of a profile operation."
    },
    "profileServiceStatus": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/ServiceStatusStatus"
        },
        "e_msg": {
          "type": "string"
        }
      },
      "title": "SeviceStatus represents a sub services status message"
    },
    "profileServicesStatusList": {
      "type": "object",
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/profileServiceStatus"
          }
        }
      },
      "title": "ServicesStatusList is the sub services status list"
    },
    "profileVersionResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Id represents the message identifier."
        },
        "version": {
          "type": "string"
        }
      },
      "title": "VersionMessage represents a version message"
    }
  }
}
