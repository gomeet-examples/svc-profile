// Code generated by protoc-gen-gomeet-service. DO NOT EDIT.
// source: pb/profile.proto
package service

import (
	"sort"
	"testing"

	"golang.org/x/net/context"

	pb "github.com/gomeet-examples/svc-profile/pb"
)

func TestServicesStatus(t *testing.T) {
	server := newProfileServer()

	servicesStatusResponse, err := server.ServicesStatus(context.Background(), &pb.EmptyMessage{})

	if err != nil {
		t.Errorf("Error on calling ServiceStatus: %v", err)
	}

	var expected []*pb.ServiceStatus
	// SUB-SERVICES DEFINITION : test-unit
	expected = append(expected, &pb.ServiceStatus{name, version, pb.ServiceStatus_OK, ""})
	// expected = append(expected, &pb.ServiceStatus{"svc-{{SubServiceNameKebabCase}}", "unknow", pb.ServiceStatus_UNAVAILABLE, ""})
	// END SUB-SERVICES DEFINITION : test-unit

	sort.Sort(servicesStatusByName(expected))

	ssStatus := servicesStatusResponse.GetServices()

	if len(ssStatus) != len(expected) {
		t.Errorf("Expected \"%d\" elements in list, got \"%d\"", len(expected), len(ssStatus))
	}

	for i, sStatus := range ssStatus {
		if sStatus.GetName() != expected[i].GetName() {
			t.Errorf("Expected \"%s\" in Name field, got \"%s\"", expected[i].GetName(), sStatus.GetName())
		}

		if sStatus.GetVersion() != expected[i].GetVersion() {
			t.Errorf("Expected \"%s\" in Version field, got \"%s\"", expected[i].GetVersion(), sStatus.GetVersion())
		}
	}
}
