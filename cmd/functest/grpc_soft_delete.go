// Code generated by protoc-gen-gomeet-service. DO NOT EDIT.
// source: pb/profile.proto
package functest

import (
	"fmt"
)

func TestSoftDelete(config FunctionalTestConfig) (failures []TestFailure) {
	client, ctx, err := grpcClient(config)
	if err != nil {
		failures = append(failures, TestFailure{Procedure: "SoftDelete", Message: fmt.Sprintf("gRPC client initialization error (%v)", err)})
		return failures
	}
	defer client.Close()

	var testCaseResults []*TestCaseResult
	reqs, extras, err := testGetSoftDeleteRequest(config)
	if err != nil {
		failures = append(failures, TestFailure{Procedure: "SoftDelete", Message: fmt.Sprintf("HTTP testGetSoftDeleteRequest error (%v)", err)})
		return failures
	}

	for _, req := range reqs {
		res, err := client.GetGRPCClient().SoftDelete(ctx, req)
		testCaseResults = append(testCaseResults, &TestCaseResult{req, res, err})
	}

	return testSoftDeleteResponse(config, FUNCTEST_GRPC, testCaseResults, extras)
}
